name: Create Release

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'The new version tag to create (e.g., v1.0.1)'
        required: true
        type: string

jobs:
  build-and-release:
    name: Build and Release
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Configure Git User
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
      
      - name: Create and Push Git Tag
        id: tag
        run: |
          TAG=${{ github.event.inputs.version }}
          echo "tag_name=$TAG" >> $GITHUB_OUTPUT
          git tag $TAG
          git push origin $TAG

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.tag.outputs.tag_name }}
          release_name: Release ${{ steps.tag.outputs.tag_name }}
          body: "Super Cuts Release - platform-specific binaries below."
          draft: false
          prerelease: false

  build-and-upload:
    name: Build and Upload Binaries
    needs: build-and-release
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            asset_name: supercuts-linux
          - os: macos-latest
            asset_name: supercuts-macos
    runs-on: ${{ matrix.os }}
    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Build the binary using PyInstaller
        run: |
          chmod +x build.sh
          ./build.sh

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.build-and-release.outputs.upload_url }}
          asset_path: ./dist/supercuts
          asset_name: ${{ matrix.asset_name }}
          asset_content_type: application/octet-stream 